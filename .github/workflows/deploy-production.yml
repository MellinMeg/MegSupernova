name: Deploy to production

on: 
  push:
    branches: [ master ]

jobs:
  deploy-production: 
    runs-on: ubuntu-latest
    if:   github.ref == 'refs/heads/master'
    steps:

    - name: Send Slack Message
      uses: voxmedia/github-action-slack-notify-build@v1
      id: slack
      env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
      with:
        channel_id: ${{ vars.CHANNEL_ID }}
        status: STARTING
        color: warning

    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Save my code in site directory
      uses: actions/checkout@v3  
      with: 
        token: ${{ secrets.GIT_PAT }} #Your GitHub access token
        ref: master

    - name: Set my ssh key and ssh-agent
      uses: webfactory/ssh-agent@v0.1.1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    #add group key to variable github
    - name: Create .secret-fetcher file
      env:
        GROUP_SECRET: ${{ secrets.GROUP_SECRET }}
        GROUP_KEY: ${{ vars.GROUP_KEY }}
      run: |
        echo "groupKey=$GROUP_KEY" > .secret-fetcher
        echo "groupSecret=$GROUP_SECRET" >> .secret-fetcher

    - name: Set up Node.js 18 for Theme
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Install dependencies and build
      run: |
        yarn install --production=false
        yarn build
      working-directory: web/app/themes/sage

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18
    
    - name: Install dependencies
      run: yarn install

    # Add support for more platforms with QEMU (optional)
    # https://github.com/docker/setup-qemu-action
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    # install Docker and enable docker service
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Deploy to production
      id: deploy
      continue-on-error: true
      run: yarn deploy-production --path-auth-sock "${{ env.SSH_AUTH_SOCK }}"

    - name: Notify Failure
      if:  steps.deploy.outcome != 'success'
      uses: voxmedia/github-action-slack-notify-build@v1
      env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel_id: ${{ vars.CHANNEL_ID }}
        status: FAILED
        color: danger

    - name: Notify Success
      if:  steps.deploy.outcome == 'success'
      uses: voxmedia/github-action-slack-notify-build@v1
      env:
         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel_id: ${{ vars.CHANNEL_ID }}
        status: SUCCESS
        color: good